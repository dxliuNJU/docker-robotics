#!/bin/bash

set -e

SCRIPT_PATH=$(dirname $(readlink -f ${BASH_SOURCE[0]}))
source $SCRIPT_PATH/setup.bash

COMPONENT=${1:-NOT SET}

echo "Running component $COMPONENT"

case $COMPONENT in
	gazebo)
		echo "Running gzserver"
		GAZEBO_ARGS=""
		if [ -n "$GAZEBO_RECORD" ]; then
			if [ -z "$GAZEBO_RECORD_PATH" ]; then
				>&2 echo "GAZEBO_RECORD set, but not GAZEBO_RECORD_PATH"
				exit 21
			fi
			if [ ! -d $GAZEBO_RECORD_PATH ]; then
				>&2 echo "$GAZEBO_RECORD_PATH is not a directory"
				exit 21
			fi
			GAZEBO_RECORD_DIR=$GAZEBO_RECORD_PATH/${JOB_NAME//:/_}
			mkdir -p $GAZEBO_RECORD_DIR
			GAZEBO_ARGS="$GAZEBO_ARGS --record --record_path $GAZEBO_RECORD_DIR"
		fi
		gzserver $GAZEBO_ARGS $GAZEBO_WORLD_PATH || exit 11
		;;

	refbox)
		if [ -n "$REFBOX_MONGODB_WAIT" ]; then
			if [ -z "$REFBOX_MONGODB_HOST" ]; then
				>&2 echo "REFBOX_MONGODB_HOST not set"
				exit 21
			fi
			if [ -z "$REFBOX_MONGODB_PORT" ]; then
				>&2 echo "REFBOX_MONGODB_PORT not set"
				exit 21
			fi
			echo "Waiting for MongoDB"
			MAX_TRIES=${REFBOX_MONGODB_WAIT_MAX_TRIES:-30}
			PERIOD=${REFBOX_MONGODB_WAIT_PERIOD:-1}
			TRIES=0
			while ! curl -f -s "http://$REFBOX_MONGODB_HOST:$REFBOX_MONGODB_PORT" >/dev/null; do
				(( TRIES=TRIES+1 ))
				if (( $TRIES >= $MAX_TRIES )); then
					>&2 echo "Could not reach MongoDB after $TRIES tries, giving up"
					exit 21
				else
					sleep $PERIOD
				fi
			done
			(( TRIES=TRIES+1 ))
			echo "MongoDB reachable after $TRIES/$MAX_TRIES tries"
		fi
		echo "Running Referee Box"
		$LLSF_REFBOX_DIR/bin/llsf-refbox || exit 22
		;;

	run-game)
		$SCRIPT_PATH/run-game
		;;

	fawkes)
		if [ -z "$META_PLUGIN" ]; then
			>&2 echo "Meta plugin not set, aborting"
			exit 41
		fi
		LL=${LOG_LEVEL:-info}
		CONF=${CONFIG:-config.yaml}
		$FAWKES_DIR/bin/fawkes -c $CONF -L console -l $LL $META_PLUGIN || exit 42
		;;

	roscore)
		stdbuf -oL -eL roscore || exit 51
		;;

	roslaunch)
		if [ -z "$ROS_PACKAGE" ]; then
			>&2 echo "ROS package not set, aborting"
			exit 61
		fi
		if [ -z "$ROS_LAUNCH_FILE" ]; then
			>&2 echo "Launch file not set, aborting"
			exit 61
		fi
		echo "Launching $ROS_PACKAGE $ROS_LAUNCH_FILE"
		stdbuf -oL -eL roslaunch --screen --wait --skip-log-check --disable-title $ROS_PACKAGE $ROS_LAUNCH_FILE || exit 62
		;;

	*)
		echo "Unknown component"
		exit 1
    ;;
esac

echo "*** TERMINATED SUCCESSFULLY ***"
exit 0
